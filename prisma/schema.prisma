// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique @db.VarChar(255)
  username  String? @db.VarChar(255)
  password String  @unique @db.VarChar(255)
  submitedPosts Post[]
  submitedComments Comment[]
  submitedActions Action[]
}

model Comment {
  id        Int      @default(autoincrement()) @id
  content   String
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  publishedDate DateTime @default(now())
}

model Post {
  id        Int      @default(autoincrement()) @id
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  publishedDate DateTime?
  likes     Int
  dislikes  Int
  comments  Comment[]
  actions       Action[]
}

model Action {
  id        Int      @default(autoincrement()) @id
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  type      ActionType
  @@unique([postId, userId])
}

enum ActionType {
  LIKE
  DISLIKE
}
